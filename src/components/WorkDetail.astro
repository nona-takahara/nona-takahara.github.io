---
import { Temporal } from "@js-temporal/polyfill";

const { props } = Astro.props;

const updateDate = ((date: string) => {
  if (!date) {
    return undefined;
  }
  if (date == "today") {
    return Temporal.Now.plainDateISO("Asia/Tokyo");
  }
  return Temporal.PlainDate.from(date.split("T")?.[0] || date);
})(props.latest.dateiso);
---

<section id={props.id} class="hideable">
  <h2>{props.title}</h2>
  <ul class="float-l category">
    {(props.category as any[]).map((key) => <li>{key}</li>)}
  </ul>
  {
    updateDate && (
      <p class="float-r no-margin">
        <small>
          {props.latest.version}（最終更新
          <time datetime={updateDate.toString()}>
            {updateDate.toLocaleString("ja-JP")}
          </time>
          ）
        </small>
      </p>
    )
  }
  <nav class="float-clear table-of-links">
    <ul class="link clickable">
      {
        (props.links as any[]).map((item) => {
          return (
            <li>
              <a href={item.url}>{item.text}</a>
            </li>
          );
        })
      }
    </ul>
  </nav>
  <slot />
  <p class="float-clear"><a href="#" class="jsshow">[戻る]</a></p>
</section>
