---
import { Temporal } from "@js-temporal/polyfill";
import { dateStringToPlainDate, formatOptions } from "./TemporalWrap";
import type { CollectionEntry } from "astro:content";

interface Props {
  props: CollectionEntry<"applist">;
}

const { props } = Astro.props;

const dateIso = props.data.latest.dateiso;

const updateDate =
  props.data.latest.dateiso == "today"
    ? Temporal.Now.plainDateISO("Asia/Tokyo")
    : dateStringToPlainDate(
        typeof dateIso === "object" ? dateIso.toISOString() : ""
      );
---

<section id={props.id} class="hideable">
  <h2>{props.data.title}</h2>
  <ul class="float-l category">
    {props.data.category.map((key) => <li>{key}</li>)}
  </ul>
  {
    updateDate && (
      <p class="float-r no-margin">
        <small>
          {props.data.latest.version}（ 最終更新
          <time datetime={updateDate.toString()}>
            {updateDate.toLocaleString("ja-JP", formatOptions)}
          </time>
          ）
        </small>
      </p>
    )
  }
  <nav class="float-clear table-of-links">
    <ul class="link clickable">
      {
        props.data.links
          .filter((v) => !!v.text)
          .map((item) => {
            return (
              <li>
                <a href={item.url}>{item.text}</a>
              </li>
            );
          })
      }
    </ul>
  </nav>
  <slot />
</section>
